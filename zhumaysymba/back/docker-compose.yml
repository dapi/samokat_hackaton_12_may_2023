---
version: "3"

services:
  postgres:
    image: postgres:15
    env_file: .env
    ports:
      - "15433:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    restart: always

  adminer:
    image: adminer:latest
    ports:
      - "18081:8080"
    depends_on:
      - postgres
    restart: always

  api:
    build:
      context: .
      dockerfile: cmd/api/Dockerfile
    env_file: .env
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - rocket-bot
    restart: always

  rocket-bot:
    build: rocket-bot
    ports:
      - "5000:5000"
    restart: always

#  rocketchat:
#    image: registry.rocket.chat/rocketchat/rocket.chat:latest
#    restart: always
#    labels:
#      traefik.enable: "true"
#  #    traefik.http.routers.rocketchat.rule: Host(`${DOMAIN}`)
#      traefik.http.routers.rocketchat.tls: "true"
#      traefik.http.routers.rocketchat.entrypoints: https
#      traefik.http.routers.rocketchat.tls.certresolver: le
#    environment:
#      MONGO_URL: "mongodb://mongodb:27017/rocketchat?replicaSet=rs0"
#      MONGO_OPLOG_URL: "mongodb://mongodb:27017/local?replicaSet=rs0"
#      ROOT_URL: http://localhost:3000
#      PORT: 3000
#      DEPLOY_METHOD: docker
#  #    DEPLOY_PLATFORM: ${DEPLOY_PLATFORM}
#    depends_on:
#      - mongodb
#    expose:
#      - 3000
#    ports:
#      - "4000:3000"
#
#  mongodb:
#    image: docker.io/bitnami/mongodb:4.0
#    restart: always
#    volumes:
#      - mongodb_data:/bitnami/mongodb
#    environment:
#      MONGODB_REPLICA_SET_MODE: primary
#      MONGODB_REPLICA_SET_NAME: rs0
#      MONGODB_PORT_NUMBER: 27017
#      MONGODB_INITIAL_PRIMARY_HOST: mongodb
#      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: 27017
#      MONGODB_ADVERTISED_HOSTNAME: mongodb
#      MONGODB_ENABLE_JOURNAL: "true"
#      ALLOW_EMPTY_PASSWORD: "yes"

#volumes:
#  mongodb_data:
#    driver: local
